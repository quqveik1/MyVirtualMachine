File listing Pass #1: Code -> Intermediate Representation

0000 | #1 | commandNum: 0010; isFinal: 1; labelLinePos: -001; | 0a 01 00 00                                       | jmp main
0001 | #1 | commandNum: 0000; isFinal: 1; labelLinePos: -001; |                                                   | 
0002 | #1 | commandNum: 0019; isFinal: 1; labelLinePos: 0002; |                                                   | enterData:
0003 | #1 | commandNum: 0018; isFinal: 1; labelLinePos: -001; | 12 04 32 04 35 04 34 04 38 04 42 04 35 04 20 00 + | db "Введите число для которого надо найти факториал: \n"	
                                                              | 47 04 38 04 41 04 3b 04 3e 04 20 00 34 04 3b 04 + | 
                                                              | 4f 04 20 00 3a 04 3e 04 42 04 3e 04 40 04 3e 04 + | 
                                                              | 33 04 3e 04 20 00 3d 04 30 04 34 04 3e 04 20 00 + | 
                                                              | 3d 04 30 04 39 04 42 04 38 04 20 00 44 04 30 04 + | 
                                                              | 3a 04 42 04 3e 04 40 04 38 04 30 04 3b 04 3a 00 + | 
                                                              | 20 00 0a 00 00 00                                 | 
0004 | #1 | commandNum: 0019; isFinal: 1; labelLinePos: 0004; |                                                   | answer:
0005 | #1 | commandNum: 0018; isFinal: 1; labelLinePos: -001; | 1e 04 42 04 32 04 35 04 42 04 3a 00 20 00 00 00   | db "Ответ: "
0006 | #1 | commandNum: 0019; isFinal: 1; labelLinePos: 0006; |                                                   | impossibleFactorial:
0007 | #1 | commandNum: 0018; isFinal: 1; labelLinePos: -001; | 22 04 30 04 3a 04 3e 04 33 04 3e 04 20 00 44 04 + | db "Такого факториала нет\n"
                                                              | 30 04 3a 04 42 04 3e 04 40 04 38 04 30 04 3b 04 + | 
                                                              | 30 04 20 00 3d 04 35 04 42 04 0a 00 00 00         | 
0008 | #1 | commandNum: 0000; isFinal: 1; labelLinePos: -001; |                                                   | 
0009 | #1 | commandNum: 0019; isFinal: 1; labelLinePos: 0009; |                                                   | factorial:
0010 | #1 | commandNum: 0000; isFinal: 1; labelLinePos: -001; |                                                   | 
0011 | #1 | commandNum: 0009; isFinal: 1; labelLinePos: -001; | 09 02 00 00 64 00 00 00                           | pop bx
0012 | #1 | commandNum: 0004; isFinal: 1; labelLinePos: -001; | 04 02 00 00 64 00 00 00                           | push bx
0013 | #1 | commandNum: 0004; isFinal: 1; labelLinePos: -001; | 04 02 00 00 64 00 00 00                           | push bx
0014 | #1 | commandNum: 0004; isFinal: 1; labelLinePos: -001; | 04 01 00 00 64 00 00 00                           | push 1
0015 | #1 | commandNum: 0012; isFinal: 1; labelLinePos: -001; | 0c 01 00 00                                       | jae prev
0016 | #1 | commandNum: 0019; isFinal: 1; labelLinePos: 0016; |                                                   | ret1:
0017 | #1 | commandNum: 0009; isFinal: 1; labelLinePos: -001; | 09 02 00 00 64 00 00 00                           | pop bx
0018 | #1 | commandNum: 0004; isFinal: 1; labelLinePos: -001; | 04 01 00 00 64 00 00 00                           | push 1
0019 | #1 | commandNum: 0021; isFinal: 1; labelLinePos: -001; | 15 00 00 00                                       | ret
0020 | #1 | commandNum: 0000; isFinal: 1; labelLinePos: -001; |                                                   | 
0021 | #1 | commandNum: 0019; isFinal: 1; labelLinePos: 0021; |                                                   | prev:
0022 | #1 | commandNum: 0000; isFinal: 1; labelLinePos: -001; |                                                   | 
0023 | #1 | commandNum: 0009; isFinal: 1; labelLinePos: -001; | 09 02 00 00 64 00 00 00                           | pop bx
0024 | #1 | commandNum: 0004; isFinal: 1; labelLinePos: -001; | 04 02 00 00 64 00 00 00                           | push bx
0025 | #1 | commandNum: 0004; isFinal: 1; labelLinePos: -001; | 04 02 00 00 64 00 00 00                           | push bx
0026 | #1 | commandNum: 0004; isFinal: 1; labelLinePos: -001; | 04 01 00 00 9c ff ff ff                           | push -1
0027 | #1 | commandNum: 0005; isFinal: 1; labelLinePos: -001; | 05 00 00 00                                       | add
0028 | #1 | commandNum: 0020; isFinal: 1; labelLinePos: 0009; | 14 01 00 00                                       | call factorial
0029 | #1 | commandNum: 0000; isFinal: 1; labelLinePos: -001; |                                                   | 
0030 | #1 | commandNum: 0007; isFinal: 1; labelLinePos: -001; | 07 00 00 00                                       | mul
0031 | #1 | commandNum: 0021; isFinal: 1; labelLinePos: -001; | 15 00 00 00                                       | ret
0032 | #1 | commandNum: 0000; isFinal: 1; labelLinePos: -001; |                                                   | 
0033 | #1 | commandNum: 0019; isFinal: 1; labelLinePos: 0033; |                                                   | main:
0034 | #1 | commandNum: 0000; isFinal: 1; labelLinePos: -001; |                                                   | 
0035 | #1 | commandNum: 0003; isFinal: 1; labelLinePos: 0002; | 03 01 00 00                                       | out enterData
0036 | #1 | commandNum: 0000; isFinal: 1; labelLinePos: -001; |                                                   | 
0037 | #1 | commandNum: 0002; isFinal: 1; labelLinePos: -001; | 02 00 00 00                                       | in
0038 | #1 | commandNum: 0000; isFinal: 1; labelLinePos: -001; |                                                   | 
0039 | #1 | commandNum: 0009; isFinal: 1; labelLinePos: -001; | 09 02 00 00 00 00 00 00                           | pop ax
0040 | #1 | commandNum: 0004; isFinal: 1; labelLinePos: -001; | 04 02 00 00 00 00 00 00                           | push ax
0041 | #1 | commandNum: 0004; isFinal: 1; labelLinePos: -001; | 04 02 00 00 00 00 00 00                           | push ax
0042 | #1 | commandNum: 0004; isFinal: 1; labelLinePos: -001; | 04 01 00 00 00 00 00 00                           | push 0
0043 | #1 | commandNum: 0012; isFinal: 1; labelLinePos: -001; | 0c 01 00 00                                       | jae normalInput
0044 | #1 | commandNum: 0003; isFinal: 1; labelLinePos: 0006; | 03 01 00 00                                       | out impossibleFactorial
0045 | #1 | commandNum: 0001; isFinal: 1; labelLinePos: -001; | 01 00 00 00                                       | hlt
0046 | #1 | commandNum: 0000; isFinal: 1; labelLinePos: -001; |                                                   | 
0047 | #1 | commandNum: 0019; isFinal: 1; labelLinePos: 0047; |                                                   | normalInput:
0048 | #1 | commandNum: 0000; isFinal: 1; labelLinePos: -001; |                                                   | 
0049 | #1 | commandNum: 0020; isFinal: 1; labelLinePos: 0009; | 14 01 00 00                                       | call factorial
0050 | #1 | commandNum: 0000; isFinal: 1; labelLinePos: -001; |                                                   | 
0051 | #1 | commandNum: 0003; isFinal: 1; labelLinePos: 0004; | 03 01 00 00                                       | out answer
0052 | #1 | commandNum: 0003; isFinal: 1; labelLinePos: -001; | 03 00 00 00                                       | out
0053 | #1 | commandNum: 0001; isFinal: 1; labelLinePos: -001; | 01 00 00 00                                       | hlt


File listing Pass #2: Intermediate Representation -> Machine Code

000 | #2 | 00000 | 0a 01 00 00 ff ff ff ff                           | jmp main
001 | #2 | 00008 |                                                   | 
002 | #2 | 00008 |                                                   | enterData:
003 | #2 | 00008 | 12 04 32 04 35 04 34 04 38 04 42 04 35 04 20 00 + | db "Введите число для которого надо найти факториал: \n"	
                 | 47 04 38 04 41 04 3b 04 3e 04 20 00 34 04 3b 04 + | 
                 | 4f 04 20 00 3a 04 3e 04 42 04 3e 04 40 04 3e 04 + | 
                 | 33 04 3e 04 20 00 3d 04 30 04 34 04 3e 04 20 00 + | 
                 | 3d 04 30 04 39 04 42 04 38 04 20 00 44 04 30 04 + | 
                 | 3a 04 42 04 3e 04 40 04 38 04 30 04 3b 04 3a 00 + | 
                 | 20 00 0a 00 00 00                                 | 
004 | #2 | 0006e |                                                   | answer:
005 | #2 | 0006e | 1e 04 42 04 32 04 35 04 42 04 3a 00 20 00 00 00   | db "Ответ: "
006 | #2 | 0007e |                                                   | impossibleFactorial:
007 | #2 | 0007e | 22 04 30 04 3a 04 3e 04 33 04 3e 04 20 00 44 04 + | db "Такого факториала нет\n"
                 | 30 04 3a 04 42 04 3e 04 40 04 38 04 30 04 3b 04 + | 
                 | 30 04 20 00 3d 04 35 04 42 04 0a 00 00 00         | 
008 | #2 | 000ac |                                                   | 
009 | #2 | 000ac |                                                   | factorial:
010 | #2 | 000ac |                                                   | 
011 | #2 | 000ac | 09 02 00 00 64 00 00 00                           | pop bx
012 | #2 | 000b4 | 04 02 00 00 64 00 00 00                           | push bx
013 | #2 | 000bc | 04 02 00 00 64 00 00 00                           | push bx
014 | #2 | 000c4 | 04 01 00 00 64 00 00 00                           | push 1
015 | #2 | 000cc | 0c 01 00 00 ff ff ff ff                           | jae prev
016 | #2 | 000d4 |                                                   | ret1:
017 | #2 | 000d4 | 09 02 00 00 64 00 00 00                           | pop bx
018 | #2 | 000dc | 04 01 00 00 64 00 00 00                           | push 1
019 | #2 | 000e4 | 15 00 00 00                                       | ret
020 | #2 | 000e8 |                                                   | 
021 | #2 | 000e8 |                                                   | prev:
022 | #2 | 000e8 |                                                   | 
023 | #2 | 000e8 | 09 02 00 00 64 00 00 00                           | pop bx
024 | #2 | 000f0 | 04 02 00 00 64 00 00 00                           | push bx
025 | #2 | 000f8 | 04 02 00 00 64 00 00 00                           | push bx
026 | #2 | 00100 | 04 01 00 00 9c ff ff ff                           | push -1
027 | #2 | 00108 | 05 00 00 00                                       | add
028 | #2 | 0010c | 14 01 00 00 30 43 00 00                           | call factorial
029 | #2 | 00114 |                                                   | 
030 | #2 | 00114 | 07 00 00 00                                       | mul
031 | #2 | 00118 | 15 00 00 00                                       | ret
032 | #2 | 0011c |                                                   | 
033 | #2 | 0011c |                                                   | main:
034 | #2 | 0011c |                                                   | 
035 | #2 | 0011c | 03 01 00 00 20 03 00 00                           | out enterData
036 | #2 | 00124 |                                                   | 
037 | #2 | 00124 | 02 00 00 00                                       | in
038 | #2 | 00128 |                                                   | 
039 | #2 | 00128 | 09 02 00 00 00 00 00 00                           | pop ax
040 | #2 | 00130 | 04 02 00 00 00 00 00 00                           | push ax
041 | #2 | 00138 | 04 02 00 00 00 00 00 00                           | push ax
042 | #2 | 00140 | 04 01 00 00 00 00 00 00                           | push 0
043 | #2 | 00148 | 0c 01 00 00 ff ff ff ff                           | jae normalInput
044 | #2 | 00150 | 03 01 00 00 38 31 00 00                           | out impossibleFactorial
045 | #2 | 00158 | 01 00 00 00                                       | hlt
046 | #2 | 0015c |                                                   | 
047 | #2 | 0015c |                                                   | normalInput:
048 | #2 | 0015c |                                                   | 
049 | #2 | 0015c | 14 01 00 00 30 43 00 00                           | call factorial
050 | #2 | 00164 |                                                   | 
051 | #2 | 00164 | 03 01 00 00 f8 2a 00 00                           | out answer
052 | #2 | 0016c | 03 00 00 00                                       | out
053 | #2 | 00170 | 01 00 00 00                                       | hlt


File listing Pass #3: Final Machine Code

000 | #3 | 00000 | 0a 01 00 00 f0 6e 00 00                           | jmp main
001 | #3 | 00008 |                                                   | 
002 | #3 | 00008 |                                                   | enterData:
003 | #3 | 00008 | 12 04 32 04 35 04 34 04 38 04 42 04 35 04 20 00 + | db "Введите число для которого надо найти факториал: \n"	
                 | 47 04 38 04 41 04 3b 04 3e 04 20 00 34 04 3b 04 + | 
                 | 4f 04 20 00 3a 04 3e 04 42 04 3e 04 40 04 3e 04 + | 
                 | 33 04 3e 04 20 00 3d 04 30 04 34 04 3e 04 20 00 + | 
                 | 3d 04 30 04 39 04 42 04 38 04 20 00 44 04 30 04 + | 
                 | 3a 04 42 04 3e 04 40 04 38 04 30 04 3b 04 3a 00 + | 
                 | 20 00 0a 00 00 00                                 | 
004 | #3 | 0006e |                                                   | answer:
005 | #3 | 0006e | 1e 04 42 04 32 04 35 04 42 04 3a 00 20 00 00 00   | db "Ответ: "
006 | #3 | 0007e |                                                   | impossibleFactorial:
007 | #3 | 0007e | 22 04 30 04 3a 04 3e 04 33 04 3e 04 20 00 44 04 + | db "Такого факториала нет\n"
                 | 30 04 3a 04 42 04 3e 04 40 04 38 04 30 04 3b 04 + | 
                 | 30 04 20 00 3d 04 35 04 42 04 0a 00 00 00         | 
008 | #3 | 000ac |                                                   | 
009 | #3 | 000ac |                                                   | factorial:
010 | #3 | 000ac |                                                   | 
011 | #3 | 000ac | 09 02 00 00 64 00 00 00                           | pop bx
012 | #3 | 000b4 | 04 02 00 00 64 00 00 00                           | push bx
013 | #3 | 000bc | 04 02 00 00 64 00 00 00                           | push bx
014 | #3 | 000c4 | 04 01 00 00 64 00 00 00                           | push 1
015 | #3 | 000cc | 0c 01 00 00 a0 5a 00 00                           | jae prev
016 | #3 | 000d4 |                                                   | ret1:
017 | #3 | 000d4 | 09 02 00 00 64 00 00 00                           | pop bx
018 | #3 | 000dc | 04 01 00 00 64 00 00 00                           | push 1
019 | #3 | 000e4 | 15 00 00 00                                       | ret
020 | #3 | 000e8 |                                                   | 
021 | #3 | 000e8 |                                                   | prev:
022 | #3 | 000e8 |                                                   | 
023 | #3 | 000e8 | 09 02 00 00 64 00 00 00                           | pop bx
024 | #3 | 000f0 | 04 02 00 00 64 00 00 00                           | push bx
025 | #3 | 000f8 | 04 02 00 00 64 00 00 00                           | push bx
026 | #3 | 00100 | 04 01 00 00 9c ff ff ff                           | push -1
027 | #3 | 00108 | 05 00 00 00                                       | add
028 | #3 | 0010c | 14 01 00 00 30 43 00 00                           | call factorial
029 | #3 | 00114 |                                                   | 
030 | #3 | 00114 | 07 00 00 00                                       | mul
031 | #3 | 00118 | 15 00 00 00                                       | ret
032 | #3 | 0011c |                                                   | 
033 | #3 | 0011c |                                                   | main:
034 | #3 | 0011c |                                                   | 
035 | #3 | 0011c | 03 01 00 00 20 03 00 00                           | out enterData
036 | #3 | 00124 |                                                   | 
037 | #3 | 00124 | 02 00 00 00                                       | in
038 | #3 | 00128 |                                                   | 
039 | #3 | 00128 | 09 02 00 00 00 00 00 00                           | pop ax
040 | #3 | 00130 | 04 02 00 00 00 00 00 00                           | push ax
041 | #3 | 00138 | 04 02 00 00 00 00 00 00                           | push ax
042 | #3 | 00140 | 04 01 00 00 00 00 00 00                           | push 0
043 | #3 | 00148 | 0c 01 00 00 f0 87 00 00                           | jae normalInput
044 | #3 | 00150 | 03 01 00 00 38 31 00 00                           | out impossibleFactorial
045 | #3 | 00158 | 01 00 00 00                                       | hlt
046 | #3 | 0015c |                                                   | 
047 | #3 | 0015c |                                                   | normalInput:
048 | #3 | 0015c |                                                   | 
049 | #3 | 0015c | 14 01 00 00 30 43 00 00                           | call factorial
050 | #3 | 00164 |                                                   | 
051 | #3 | 00164 | 03 01 00 00 f8 2a 00 00                           | out answer
052 | #3 | 0016c | 03 00 00 00                                       | out
053 | #3 | 00170 | 01 00 00 00                                       | hlt
